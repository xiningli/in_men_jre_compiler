/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package in.men.jre.compiler;

import javax.tools.*;
import java.io.File;
import java.io.InputStream;
import java.net.URI;
import java.net.URL;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Arrays;
public class App {

    public static void main(String[] args) throws Exception{
        StringBuffer sourceCode = new StringBuffer();


        sourceCode.append("package org.mdkt;\n");
        sourceCode.append("public class HelloClass {\n");
        sourceCode.append("   public String hello() { return \"hello\"; }");
        sourceCode.append("}");

        Class<?> clazz = InMemoryJavaCompiler.newInstance().useOptions("-Xlint:unchecked").compile("org.mdkt.HelloClass", sourceCode.toString());

        final Method[] methods = clazz.getDeclaredMethods();
        System.out.println(Arrays.asList(methods));
        Method tmpMethod = null;

        for (final Method method : methods) {
            if (method.getName().equals("hello")) {
                if (!method.isAccessible()) method.setAccessible(true);
                tmpMethod =  method;
            }
        }

        Object obj = clazz.newInstance();
        String result = (String) tmpMethod.invoke(obj);
        while(true) {
            System.out.println(result);
        }

    }
    
}
